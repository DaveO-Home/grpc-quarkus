/*
 * This file is generated by jOOQ.
 */
package golf.handicap.generated.tables.records


import golf.handicap.generated.tables.Ratings

import org.jooq.Record2
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class RatingsRecord() : UpdatableRecordImpl<RatingsRecord>(Ratings.RATINGS) {

    open var courseSeq: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var tee: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var teeColor: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var teeRating: Float?
        set(value): Unit = set(3, value)
        get(): Float? = get(3) as Float?

    open var teeSlope: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var teePar: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record2<Int?, Int?> = super.key() as Record2<Int?, Int?>

    /**
     * Create a detached, initialised RatingsRecord
     */
    constructor(courseSeq: Int? = null, tee: Int? = null, teeColor: String? = null, teeRating: Float? = null, teeSlope: Int? = null, teePar: Int? = null): this() {
        this.courseSeq = courseSeq
        this.tee = tee
        this.teeColor = teeColor
        this.teeRating = teeRating
        this.teeSlope = teeSlope
        this.teePar = teePar
        resetChangedOnNotNull()
    }
}
